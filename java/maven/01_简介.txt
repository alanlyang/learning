一个项目通常分为如下几个层
1、表示层： 主要和浏览器或其他终端打交道
    - 1、视图层
        主要使用 h5/css/js/jsp
    - 2、控制层
        Sevvlet/Action/Handler
2、业务逻辑层
    - Spring IOC AOP

3、持久化层
    - 主要是指和数据库打交道
    - JDBC/DButils/Spring JDBCTemplate/Hibernate/Mybatis
4、数据库


为什么使用Maven？
现状
    1、一个项目就是一个工程
        如果一个项目非常庞大，就不能使用package来进行划分,最好每一个模块对应与一个工程，利于协作分工
    2、项目中需要得jar包必须手动复制粘贴到lib中
        会带来问题：
            重复的JAR包回出现在不同的工程里边，使得项目臃肿
            借助maven可以将jar包放在仓库中，有需要使用时，只需要引用即可，并不需要把jar包复制过来

    3、jar包需要别人事先准备好或者到官网下载
        不同技术的官网的jar包下载的形式是不同的，
        有些技术的jar包只支持maven下载

        借助maven，可以以一种统一的规范去下载jar包，基本所有知名机构的jar包都是存放在maven的中央仓库中

    4、一个jar包依赖的其他jar包需要自己手动添加到项目中
        如果所有的依赖关系都需要自己整理，则会极大的增加学习成本

maven 是什么？
    1、是一个服务于java平台的自动化构建工具
        make->ant->Maven->Gradle
        - 构建
            以java源文件，框架配置文件， jsp, html, 等资源为原材料，来生成一个可以运行的项目的过程
            - 编译: java文件 -》编译->class字节码文件 -》交给Jvm去执行
            - 部署：一个bs项目最终运行的并不是web工程本身，二十这个动态web工程编译的结果
            - java工程有运行时环境，maven也有对应的运行时环境
                运行时环境其实时一组jar包的组合
    
    